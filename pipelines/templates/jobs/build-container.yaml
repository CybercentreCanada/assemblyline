parameters:
  # Base image for component image
  - name: baseImage
    type: string
  # Component image to be built
  - name: component
    type: string
  - name: displayName
    type: string
  # Directory path
  - name: buildContext
    type: string
    default: "."
  # Relative path to Dockerfile to build the image
  - name: dockerFile
    type: string
    default: "./Dockerfile"
  # Acts as an explicit image name setting rather than to be derived from component
  - name: imageName
    type: string
    default: ""
  # Working directory
  - name: workingDirectory
    type: string
    default: ""

jobs:
  - job: build_${{ replace(parameters.displayName, '-', '_') }}
    displayName: Build ${{ parameters.displayName }} Image
    steps:
      - checkout: none
      - download: current
        artifact: working
      - task: Docker@2
        displayName: Login to docker registry
        inputs:
          command: login
          containerRegistry: cccstemp
      - script: |
          set -exv  # Echo commands before they are run
          if [[ "$TAG" == *stable* ]]; then export BUILD_KIND=stable; else export BUILD_KIND=latest; fi
          export VERSION=${TAG/stable}
          export VERSION=${VERSION/beta/b}
          export SERIES="`expr $TAG : '\([0-9]\+\.[0-9]\+\.\)'`${BUILD_KIND}"

          if [[ "${{ parameters.workingDirectory }}" = *${{ parameters.component }} ]]
          then
            mv ../dist/ dist
          fi

          export BASE=cccstemp.azurecr.io/${{ parameters.baseImage }}
          export IMAGE=cccstemp.azurecr.io/${{ parameters.imageName }}

          docker build --build-arg base=$BASE \
                        --build-arg version=$VERSION \
                        --build-arg branch=$BUILD_KIND \
                        -t $IMAGE:$TAG -t $IMAGE:$BUILD_KIND -t $IMAGE:$SERIES \
                        -f ${{ parameters.dockerFile }} ${{ parameters.buildContext }}
          docker push $IMAGE -q --all-tags
        workingDirectory: ${{ parameters.workingDirectory }}
        displayName: Build ${{ parameters.displayName }}
