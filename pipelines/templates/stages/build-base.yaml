stages:
  - stage: build_base
    displayName: Build Base
    dependsOn: build_python
    jobs:
      - job: build_base
        displayName: Build Base Image
        steps:
          - checkout: none
          - download: current
            artifact: working
          - task: Docker@2
            displayName: Login to docker registry
            inputs:
              command: login
              containerRegistry: cccstemp
          - script: |
              set -exv  # Echo commands before they are run
              if [[ "$TAG" == *stable* ]]; then export BUILD_TYPE=stable; else export BUILD_TYPE=latest; fi
              export VERSION=${TAG/stable}
              export VERSION=${VERSION/beta/b}
              export SERIES="`expr $TAG : '\([0-9]\+\.[0-9]\+\.\)'`${BUILD_TYPE}"

              cd assemblyline-base
              mv ../dist/ dist

              docker pull cccstemp.azurecr.io/assemblyline-root-build:$BUILD_TYPE &
              docker pull cccstemp.azurecr.io/assemblyline-root:$BUILD_TYPE &
              wait

              set +xv
              export IMAGE=cccstemp.azurecr.io/assemblyline
              # docker build --build-arg version=$VERSION -t $IMAGE:$TAG -t $IMAGE:$BUILD_TYPE -t $IMAGE:$SERIES . | while read line ; do echo "$(date) | $line"; done;
              docker build --build-arg version=$VERSION \
                           --build-arg version_tag=$TAG \
                           --build-arg build_image=cccstemp.azurecr.io/assemblyline-root-build:$BUILD_TYPE \
                           --build-arg base=cccstemp.azurecr.io/assemblyline-root \
                           --build-arg tag=$BUILD_TYPE \
                           -t $IMAGE:$TAG -t $IMAGE:$BUILD_TYPE -t $IMAGE:$SERIES . -f incremental.Dockerfile | while read line ; do echo "$(date) | $line"; done;
              docker push $IMAGE -q --all-tags
            workingDirectory: $(Pipeline.Workspace)/working
            displayName: Build Base
